{"version":3,"sources":["images/hero.jpg","components/PostCardFront.jsx","components/Content.jsx","components/BackLeft.jsx","components/NavigationList.jsx","components/PostStamp.jsx","components/BackRight.jsx","components/NavigationButton.jsx","components/Navigation.jsx","components/PostCardBack.jsx","components/PostCard.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","PostCardFront","props","className","Content","BackLeft","NavigationList","size","PostStamp","src","logo","width","height","BackRight","NavigationButton","type","id","htmlFor","Navigation","PostCardBack","PostCard","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"uFAAAA,EAAOC,QAAU,IAA0B,kC,+HCe5BC,G,MAbO,SAACC,GACnB,OACI,yBAAKC,UAAU,uDACX,yBAAKA,UAAU,yCACX,mCACA,+CACA,0CACA,oDCgBDC,EAvBC,SAACF,GACb,OACI,6BAASC,UAAU,WACf,gDACA,iGAGC,uFAGD,8HAGA,iEACuC,6BADvC,sBCHGE,EARE,SAACH,GACd,OACI,yBAAKC,UAAU,uBACX,kBAAC,EAAD,Q,OCqCGG,EAxCQ,SAACJ,GACpB,OACI,yBAAKC,UAAU,oBACX,wBAAIA,UAAU,oBACV,wBAAIA,UAAU,wCACV,4BAAQA,UAAU,4BACd,kBAAC,IAAD,CAAUI,KAAM,MAEpB,0BAAMJ,UAAU,0BAAhB,YAEJ,wBAAIA,UAAU,wCACV,4BAAQA,UAAU,4BACd,kBAAC,IAAD,CAAUI,KAAM,MAEpB,0BAAMJ,UAAU,0BAAhB,YAEJ,wBAAIA,UAAU,wCACV,4BAAQA,UAAU,4BACd,kBAAC,IAAD,CAAUI,KAAM,MAEpB,0BAAMJ,UAAU,0BAAhB,YAEJ,wBAAIA,UAAU,wCACV,4BAAQA,UAAU,4BACd,kBAAC,IAAD,CAAUI,KAAM,MAEpB,0BAAMJ,UAAU,0BAAhB,YAEJ,wBAAIA,UAAU,wCACV,4BAAQA,UAAU,4BACd,kBAAC,IAAD,CAAUI,KAAM,MAEpB,0BAAMJ,UAAU,0BAAhB,e,gBCdLK,EAlBG,SAACN,GACf,OACI,yBAAKC,UAAU,sBACX,yBACIM,IAAKC,IACLP,UAAU,YACVQ,MAAM,SACNC,OAAO,aCERC,EATG,SAACX,GACf,OACI,yBAAKC,UAAU,yBACX,kBAAC,EAAD,MACA,kBAAC,EAAD,QCaGW,EAjBU,SAACZ,GACtB,OACI,6BACI,2BAAOa,KAAK,WAAWZ,UAAU,uBAAuBa,GAAG,gBAC3D,2BAAOC,QAAQ,cAAcd,UAAU,sBACnC,0BAAMA,UAAU,oBAAhB,SAGJ,yBAAKA,UAAU,0BAAf,QAEA,yBAAKA,UAAU,0CACX,kBAAC,EAAD,SCFDe,EARI,SAAChB,GAChB,OACI,yBAAKC,UAAU,cACX,kBAAC,EAAD,QCOGgB,EAVM,SAACjB,GAClB,OACI,yBAAKC,UAAU,+BACX,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,QCGGiB,MATf,WACE,OACE,yBAAKjB,UAAU,QACX,kBAAC,EAAD,MACA,kBAAC,EAAD,QCCOkB,MANf,WACE,OACE,kBAAC,EAAD,OCOgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d1f8a17c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hero.6e09f410.jpg\";","import React from 'react';\n\nconst PostCardFront = (props) => {\n    return (\n        <div className=\"card__side card__side--front u-center-center-column\">\n            <div className=\"front__content u-center-center-column\">\n                <i>icon</i>\n                <h1>Fran & Philippe</h1>\n                <h2>24/10/2020</h2>\n                <span>100d 20h 10min</span>                \n            </div>\n        </div>\n    );\n};\n\nexport default PostCardFront;","import React from 'react';\n\nconst Content = (props) => {\n    return(\n        <content className=\"content\">\n            <h1>Kerkelijke Trouw</h1>\n            <p>\n                Onze kerkelijke trouw zal doorgaan in de Sint-Pieterskerk in gent.\n             </p>\n             <p>\n                Deze prachtige kerk is gelegen op het Sint-Pietersplein.\n            </p>   \n            <p>\n                Deze kerk ligt vlak naast de faculteit Economie & Bedrijfskunde waar wij elkaar ontmoet hebben.\n            </p>\n            <p>\n                Adres: Sint-Pietersplein, 9000 Gent<br></br>\n                Tijdstip: 14u00.\n            </p>\n            \n        </content>\n\n    );\n};\n\nexport default Content;","import React from 'react';\nimport Content from './Content';\nimport ContentVisuals from './ContentVisuals';\n\nconst BackLeft = (props) => {\n    return (\n        <div className=\"backLeft u-padding-\">\n            <Content />\n        </div>\n    );\n};\n\nexport default BackLeft;","import React from 'react';\nimport {FaChurch} from \"react-icons/fa\";\n\n\nconst NavigationList = (props) => {\n    return (\n        <nav className=\"navigation__flex\">\n            <ul className=\"navigation__list\">\n                <li className=\"navigation__item u-center-center-row\">\n                    <button className=\"navigation__item__button\">\n                        <FaChurch size={30}/>\n                    </button>\n                    <span className=\"navigation__item__span\">Welcome</span>\n                </li>\n                <li className=\"navigation__item u-center-center-row\">\n                    <button className=\"navigation__item__button\">\n                        <FaChurch size={30}/>\n                    </button>\n                    <span className=\"navigation__item__span\">Welcome</span>\n                </li>\n                <li className=\"navigation__item u-center-center-row\">\n                    <button className=\"navigation__item__button\">\n                        <FaChurch size={30}/>\n                    </button>\n                    <span className=\"navigation__item__span\">Welcome</span>\n                </li>\n                <li className=\"navigation__item u-center-center-row\">\n                    <button className=\"navigation__item__button\">\n                        <FaChurch size={30}/>\n                    </button>\n                    <span className=\"navigation__item__span\">Welcome</span>\n                </li>\n                <li className=\"navigation__item u-center-center-row\">\n                    <button className=\"navigation__item__button\">\n                        <FaChurch size={30}/>\n                    </button>\n                    <span className=\"navigation__item__span\">Welcome</span>\n                </li>\n            </ul> \n        </nav>\n        \n    );\n};\n\nexport default NavigationList;\n\n\n","import React from 'react';\nimport logo from '../images/hero.jpg';\n\n\nconst PostStamp = (props) => {\n    return (\n        <div className=\"postStampContainer\">\n            <img \n                src={logo}\n                className=\"postStamp\"\n                width=\"250rem\"\n                height=\"140rem\"\n            >\n            </img>\n        </div>\n\n        \n    );\n\n}\n\n\nexport default PostStamp;","import React from 'react';\nimport NavigationList from './NavigationList';\nimport PostStamp from './PostStamp';\n\nconst BackRight = (props) => {\n    return (\n        <div className=\"backRight u-padding-3\">\n            <PostStamp />\n            <NavigationList />\n        </div>\n    );\n};\n\nexport default BackRight;","import React from 'react';\nimport NavigationList from \"./NavigationList\";\n\n\nconst NavigationButton = (props) => {\n    return (\n        <div>\n            <input type=\"checkbox\" className=\"navigation__checkbox\" id=\"navi-toggle\"></input>\n            <label htmlFor=\"navi-toggle\" className=\"navigation__button\">\n                <span className=\"navigation__icon\">&nbsp;</span>\n            </label>\n\n            <div className=\"navigation__background\">&nbsp;</div>\n            \n            <div className=\"navigation__nav u-center-center-column\">\n                <NavigationList />\n            </div>\n        </div>\n    );\n};\n\nexport default NavigationButton;","import React from 'react';\nimport NavigationButton from \"./NavigationButton\";\nimport NavigationList from './NavigationList';\n\n\nconst Navigation = (props) => {\n    return (\n        <div className=\"navigation\">\n            <NavigationButton />\n        </div>\n    );\n}\n\nexport default Navigation;\n\n        \n","import React from 'react';\nimport BackLeft from './BackLeft';\nimport BackRight from './BackRight';\nimport Navigation from './Navigation';\n\nconst PostCardBack = (props) => {\n    return (\n        <div className=\"card__side card__side--back\">\n            <BackLeft />\n            <BackRight />\n            <Navigation />\n        </div> \n    );\n};\n\nexport default PostCardBack;","import React from 'react';\nimport PostCardFront from './PostCardFront';\nimport PostCardBack from './PostCardBack';\n\nfunction PostCard() {\n  return (\n    <div className=\"card\">\n        <PostCardFront />\n        <PostCardBack />\n    </div>\n  );\n}\n\nexport default PostCard;","import React from 'react';\nimport PostCard from './components/PostCard';\n\nfunction App() {\n  return (\n    <PostCard />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}