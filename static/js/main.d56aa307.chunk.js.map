{"version":3,"sources":["components/Countdown.jsx","components/PostCardFront.jsx","components/NavigationList.jsx","components/PostStamp.jsx","components/BackRight.jsx","components/BackLeft2.jsx","components/NavigationButton.jsx","cardContent.js","components/PostCardBack.jsx","components/PostCard.jsx","App.js","serviceWorker.js","index.js","images/hero-small.jpg"],"names":["Countdown","props","state","days","hours","min","sec","this","interval","setInterval","date","calculateCountdown","setState","stop","endDate","diff","Date","parse","timeLeft","years","millisec","Math","floor","clearInterval","value","String","length","countDown","className","addLeadingZeros","Component","defaultProps","PostCardFront","NavigationList","content","updateButtonChecked","updateShow","navContent","map","cont","i","key","onClick","e","window","matchMedia","matches","hyperOnClickHandler","href","title","size","PostStamp","src","logo","width","height","alt","BackRight","BackLeft2","frameborder","allowtransparency","allow","NavigationButton","buttonChecked","type","id","checked","onChange","htmlFor","cardContent","time","address","gMaps","text","PostCardBack","index","content2","show","listedContent","filter","cardContent2","addEventListener","forceUpdate","PostCard","document","documentMode","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.d56aa307.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Countdown extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0,\n    }\n  }\n\n  componentDidMount() {\n    // update every second\n    this.interval = setInterval(() => {\n      const date = this.calculateCountdown(this.props.date);\n      date ? this.setState(date) : this.stop();\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    this.stop();\n  }\n\n  calculateCountdown(endDate) {\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000;\n\n    // clear countdown when date is reached\n    if (diff <= 0) return false;\n\n    const timeLeft = {\n      years: 0,\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0,\n      millisec: 0,\n    };\n\n    // calculate time difference between now and expected date\n    if (diff >= (365.25 * 86400)) { // 365.25 * 24 * 60 * 60\n      timeLeft.years = Math.floor(diff / (365.25 * 86400));\n      diff -= timeLeft.years * 365.25 * 86400;\n    }\n    if (diff >= 86400) { // 24 * 60 * 60\n      timeLeft.days = Math.floor(diff / 86400);\n      diff -= timeLeft.days * 86400;\n    }\n    if (diff >= 3600) { // 60 * 60\n      timeLeft.hours = Math.floor(diff / 3600);\n      diff -= timeLeft.hours * 3600;\n    }\n    if (diff >= 60) {\n      timeLeft.min = Math.floor(diff / 60);\n      diff -= timeLeft.min * 60;\n    }\n    timeLeft.sec = diff;\n\n    return timeLeft;\n  }\n\n  stop() {\n    clearInterval(this.interval);\n  }\n\n  addLeadingZeros(value) {\n    value = String(value);\n    while (value.length < 2) {\n      value = '0' + value;\n    }\n    return value;\n  }\n\n  render() {\n    const countDown = this.state;\n\n    return (\n      <div className=\"Countdown\">\n        <span className=\"Countdown-col\">\n          <span className=\"Countdown-col-element\">\n              <strong>{this.addLeadingZeros(countDown.days)}</strong>\n              <span>{countDown.days === 1 ? 'Day' : 'Days'}</span>\n          </span>\n        </span>\n\n        <span className=\"Countdown-col\">\n          <span className=\"Countdown-col-element\">\n            <strong>{this.addLeadingZeros(countDown.hours)}</strong>\n            <span>Hours</span>\n          </span>\n        </span>\n\n\n        <span className=\"Countdown-col\">\n          <span className=\"Countdown-col-element\">\n            <strong>{this.addLeadingZeros(countDown.min)}</strong>\n            <span>Min</span>\n          </span>\n        </span>\n\n        <span className=\"Countdown-col\">\n          <span className=\"Countdown-col-element\">\n            <strong>{this.addLeadingZeros(countDown.sec)}</strong>\n            <span>Sec</span>\n          </span>\n        </span>\n      </div>\n    );\n  }\n}\n\nCountdown.propTypes = {\n  date: PropTypes.string.isRequired\n};\n\nCountdown.defaultProps = {\n  date: new Date()\n};\n\nexport default Countdown;","import React from 'react';\nimport Countdown from './Countdown';\n\nconst PostCardFront = (props) => {\n\n    return (\n        <div className=\"card__side card__side--front u-center-center-column\">\n            <div className=\"front__content u-center-center-column\">\n                <i>icon</i>\n                <h1>Fran & Philippe</h1>\n                <h2>24/10/2020</h2>\n                <Countdown date={`2020-10-24T00:00:00`}/>\n                <button className=\"front__cta\">Meer info</button>          \n            </div>\n        </div>\n    );\n};\n\nexport default PostCardFront;","import React from 'react';\nimport {FaChurch} from \"react-icons/fa\";\n\n\nconst NavigationList = ({ content, updateButtonChecked, updateShow }) => {\n\n    const hyperOnClickHandler = (i) => {\n        if(window.matchMedia(\"(max-width: 60em),(orientation: portrait)\").matches === true) {\n            updateButtonChecked();\n        }\n        else {\n            updateShow(i);\n        }\n    };\n\n    const navContent = content.map( (cont, i) => {\n\n        return (\n            <li className=\"navigation__item\" key={i} onClick={(e) => hyperOnClickHandler(i)}>\n                <a href={[\"#\" + cont.title]} className=\"navigation__hyper\" >\n                    <div className=\"navigation__item__icon\">\n                        <div className=\"navigation__item__icon__text\">\n                            <FaChurch size={30}/>\n                        </div>\n                    </div>\n                    <span className=\"navigation__item__span\">{cont.title}</span>\n                </a>\n            </li>\n        )\n    });\n\n    return (\n        <ul className=\"navigation__list\">\n            {navContent}\n        </ul>        \n    );\n};\n\nexport default NavigationList;\n\n\n","import React from 'react';\nimport logo from '../images/hero-small.jpg';\n\n\nconst PostStamp = (props) => {\n    return (\n        <div className=\"postStampContainer\">\n            <img \n                src={logo}\n                className=\"postStamp\"\n                width=\"250rem\"\n                height=\"140rem\"\n                alt=\"Poststamp\"\n            >\n            </img>\n        </div>\n\n        \n    );\n\n}\n\n\nexport default PostStamp;","import React from 'react';\nimport NavigationList from './NavigationList';\nimport PostStamp from './PostStamp';\n\nconst BackRight = ({ content, updateShow }) => {\n    return (\n        <div className=\"backRight u-padding-1\">\n            <PostStamp />\n            <div>&nbsp;</div>\n            <NavigationList content={content} updateShow={updateShow}/>\n        </div>\n    );\n};\n\nexport default BackRight;","import React from 'react';\n\nconst BackLeft2 = () => {\n    return (\n        <div className=\"backLeft2\">\n            <div className=\"backLeft2__parallax\"></div>\n            <div className=\"backLeft2__container\">\n                <h2 className=\"backLeft2__title\">Burgerlijk huwelijk</h2>\n                <h3 className=\"backLeft2__subTitle\">\n                    Vrijdag 23 Oktober 2020\n                    <br></br>\n                    <strong>Receptie - 9u45   &#62;&#62;   </strong>\n                    <strong>Receptie - 9u45   &#62;&#62;   </strong>\n                    <strong>Receptie - 9u45</strong>\n                </h3>\n                <p className=\"backLeft2__address\">\n                    <em>Stadhuis Gent</em>\n                    <br></br>\n                    Stadhuisstraat 123\n                    <br></br>\n                    9000 Gent\n                </p>\n                <a className=\"backLeft2__link\" \n                    href=\"https://www.google.com/maps/dir/Parking+Sint-Pietersplein+(P10),+Sint-Pietersplein,+Gent/Onze-Lieve-Vrouw+Sint-Pieterskerk,+Sint-Pietersplein,+Gent/@51.0420331,3.7266986,17z/data=!4m8!4m7!1m2!1m1!1s0x47c371575524e343:0x952be0a3326e6942!1m2!1m1!1s0x47c37150a5ee13b3:0x3f63a9657888f6ba!3e2\">\n                        Navigeer\n                </a>\n            </div>\n            <iframe src=\"https://open.spotify.com/embed/playlist/4ngwgJasrc2zgrYDy83exv\" width=\"600\" height=\"300\" frameborder=\"0\" allowtransparency=\"true\" allow=\"encrypted-media\"></iframe>\n        </div>\n    );\n}\n\n\nexport default BackLeft2;","import React, { Component } from 'react';\nimport NavigationList from \"./NavigationList\";\n\n\nclass NavigationButton extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            buttonChecked: false,\n        };\n    }\n\n\n    updateButtonChecked = () => {\n        this.state.buttonChecked === true ?\n        this.setState({buttonChecked : false}) :\n        this.setState({buttonChecked : true});\n    };\n\n\n    render() {\n\n        const { content } = this.props;\n\n        return (\n            <div className=\"navigation\">\n                <input type=\"checkbox\" \n                    className=\"navigation__checkbox\" \n                    id=\"navi-toggle\" \n                    checked={this.state.buttonChecked}\n                    onChange={this.updateButtonChecked}></input>\n                <label htmlFor=\"navi-toggle\" className=\"navigation__button\">\n                    <span className=\"navigation__icon\">&nbsp;</span>\n                </label>\n\n                <div className=\"navigation__background\">\n                    &nbsp;\n                </div>\n                \n                <nav className=\"navigation__nav\">\n                    <NavigationList content={content} updateButtonChecked={this.updateButtonChecked}/>\n                </nav>\n            </div>\n        );\n    }\n};\n\nexport default NavigationButton;","const cardContent = [\n    {\n        id: 0,\n        title :\"Burgerlijke trouw\",\n        date : \"23 Oktober 2020\",\n        time : \"09:45\",\n        address : \"Stadhuisstraat 123, 9000 Gent\",\n        gMaps : \"https://www.google.com/maps/place/Sint-Pietersabdij/@51.0424485,3.72335,17z/data=!4m13!1m7!3m6!1s0x47c37150b0f4c601:0xc78bf8eb1d6e094a!2sSint-Pietersplein,+9000+Gent!3b1!8m2!3d51.0424485!4d3.725544!3m4!1s0x47c37150b165dd81:0x6a023c4d7bdac0a8!8m2!3d51.0421385!4d3.7267464\",\n        text : \"Wij verwelkomen u graag in het stadhuis van Gent voor onze burgerlijke trouw.\",\n    },\n    {\n        id: 1,\n        title: \"Say Hallelujah & Yes\",\n        date : \"24 Oktober 2020\",\n        time : \"14:00\",\n        address : \"Sint-Pietersplein, 9000 Gent\",\n        gMaps : \"https://www.google.com/maps/place/Sint-Pietersabdij/@51.0424485,3.72335,17z/data=!4m13!1m7!3m6!1s0x47c37150b0f4c601:0xc78bf8eb1d6e094a!2sSint-Pietersplein,+9000+Gent!3b1!8m2!3d51.0424485!4d3.725544!3m4!1s0x47c37150b165dd81:0x6a023c4d7bdac0a8!8m2!3d51.0421385!4d3.7267464\",\n        text : \"Wij verwerlkomen u graag in de Sint-Pieterskerk.\",\n    },\n    {\n        id: 2,\n        title: \"Aperitief\",\n        date : \"24 Oktober 2020\",\n        time : \"17:00\",\n        address : \"Hof ten bosse straat\",\n        gMaps : \"https://www.google.com/maps/place/Sint-Pietersabdij/@51.0424485,3.72335,17z/data=!4m13!1m7!3m6!1s0x47c37150b0f4c601:0xc78bf8eb1d6e094a!2sSint-Pietersplein,+9000+Gent!3b1!8m2!3d51.0424485!4d3.725544!3m4!1s0x47c37150b165dd81:0x6a023c4d7bdac0a8!8m2!3d51.0421385!4d3.7267464\",\n        text : \"Wij verwelkomen u graag voor een heerlijk aperitief.\",\n    },\n    {\n        id: 3,\n        title: \"Diner\",\n        date : \"24 Oktober 2020\",\n        time : \"19:00\",\n        address : \"Hof ten bosse straat\",\n        gMaps : \"https://www.google.com/maps/place/Sint-Pietersabdij/@51.0424485,3.72335,17z/data=!4m13!1m7!3m6!1s0x47c37150b0f4c601:0xc78bf8eb1d6e094a!2sSint-Pietersplein,+9000+Gent!3b1!8m2!3d51.0424485!4d3.725544!3m4!1s0x47c37150b165dd81:0x6a023c4d7bdac0a8!8m2!3d51.0421385!4d3.7267464\",\n        text : \"Wij verwerlkomen u graag voor een heerlijk diner.\",\n    },\n    {\n        id: 4,\n        title: \"Dessert\",\n        date : \"24 Oktober 2020\",\n        time : \"21:00\",\n        address : \"Hof ten bosse straat\",\n        gMaps : \"https://www.google.com/maps/place/Sint-Pietersabdij/@51.0424485,3.72335,17z/data=!4m13!1m7!3m6!1s0x47c37150b0f4c601:0xc78bf8eb1d6e094a!2sSint-Pietersplein,+9000+Gent!3b1!8m2!3d51.0424485!4d3.725544!3m4!1s0x47c37150b165dd81:0x6a023c4d7bdac0a8!8m2!3d51.0421385!4d3.7267464\",\n        text : \"Wij verwerlkomen u graag voor een heerlijk dessert.\",\n    }\n];\n\nexport default cardContent;","import React, { Component } from 'react';\nimport BackRight from './BackRight';\nimport BackLeft2 from './BackLeft2';\nimport NavigationButton from './NavigationButton';\nimport cardContent from '../cardContent';\n\nclass PostCardBack extends Component {\n    constructor() {\n        super();\n        this.state = {\n            content: []\n        }\n    }\n\n\n    updateShow = (index) => {\n        const content2 = this.state.content.map((cont, i) => {\n            if(i===index) {\n                return {...cont, show: true}\n            }\n            else {\n                return {...cont, show: false}\n            }\n        });\n        this.setState({content: content2})\n    };\n        \n\n    render() {\n        const { content} = this.state;\n\n        let listedContent={};\n        // if small device, show all BackLeft\n        if(matchMedia(\"(max-width: 60em),(orientation: portrait)\").matches === true) {\n            listedContent = content.map(\n                (cont, i) => {\n                return (\n                    <BackLeft2\n                        key = {i}\n                        title={cont.title}\n                        date = {cont.date}\n                        time = {cont.time}\n                        address = {cont.address}\n                        text = {cont.text}\n                        gMaps = {cont.gMaps}\n                    />                   \n                )}\n            );\n        }\n        // if large device, show only the one where state.content.show = true\n        else {\n            const listedContent2 = content.filter(\n                (cont => {\n                    return cont.show === true;\n                })  \n            );\n            \n            listedContent = listedContent2.map(\n                (cont, i) => {\n                return (\n                    <BackLeft2\n                        key = {i}\n                        title={cont.title}\n                        date = {cont.date}\n                        time = {cont.time}\n                        address = {cont.address}\n                        text = {cont.text}\n                        gMaps = {cont.gMaps}\n                    />                   \n                )}\n            );\n\n            \n        }\n\n        \n\n        return(\n            <div className=\"card__side card__side--back\">\n                {listedContent}\n                <BackRight content={content} updateShow={this.updateShow}/>\n                <NavigationButton content={content} />\n            </div>\n        )\n    };\n\n    componentDidMount() {\n\n        const cardContent2 = cardContent.map(\n            (cont, i) => {\n                if(i===0) {\n                    return {...cont, show: true};\n                }\n                else {\n                    return {...cont, show: false};\n                }\n            }\n        );\n\n        this.setState({content: cardContent2});\n\n        const mql = window.matchMedia(\"(max-width: 60em),(orientation: portrait)\");\n\n        mql.addEventListener(\"change\", () => {\n            this.forceUpdate();\n        });\n    }\n};\n\nexport default PostCardBack;","import React from 'react';\nimport PostCardFront from './PostCardFront';\nimport PostCardBack from './PostCardBack';\n\nfunction PostCard() {\n\n  const isIE = /*@cc_on!@*/false || !!document.documentMode;\n\n  const validateIE = () => {\n    // Internet Explorer 6-11\n    if(isIE===true) {\n      return <p>Please do not use an old browser</p>;\n    }\n    else {\n      return (\n        <div className=\"card\">\n          <PostCardFront />\n          <PostCardBack />\n        </div>\n      )    \n    } \n\n  }\n\n  return (validateIE());\n\n}\n\nexport default PostCard;","import React from 'react';\nimport PostCard from './components/PostCard';\n\nfunction App() {\n  return (\n    <PostCard />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/hero-small.94939136.jpg\";"],"sourceRoot":""}